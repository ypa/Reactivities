{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/activities/dashoard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashoard/ActivityListItemAttendee.tsx","features/activities/dashoard/ActivityListItem.tsx","features/activities/dashoard/ActivityList.tsx","features/activities/dashoard/ActivityListItemPlaceholder.tsx","features/activities/dashoard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileFollowings.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","startsWith","userStore","logout","setServerError","Promise","reject","responseBody","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","fbLogin","accessToken","refreshToken","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","setActivity","setPagination","setLoadingInitial","console","log","loadActivity","getActivity","runInAction","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","currentUserProfile","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","setDisplayName","activityStore","followingCount","loadFollowings","loadUserActivities","UserStore","fbAccessToken","fbLoading","refreshTokenTimeout","creds","setToken","startRefreshTokenTimer","modalStore","closeModal","window","localStorage","removeItem","getUser","name","getFacebookLoginStatus","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","scope","stopRefreshTokenTimer","jwtToken","atob","split","timeout","exp","now","setTimeout","clearTimeout","getItem","appLoaded","setItem","setAppLoaded","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","handleFollow","Card","Description","str","length","substring","truncate","bio","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","ActivityListItem","Segment","Group","Label","textAlign","marginBottom","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","isLoggedIn","Divider","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","event","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","isCurrentUser","addPhotoMode","setAddPhotoMode","target","setTarget","Tab","Pane","itemsPerRow","currentTarget","handleSetMainPhoto","handleDeletePhoto","setEditMode","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","objectFit","Meta","menuPosition","Statistic","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.bc48af48.chunk.js","sourcesContent":["export interface Pagination {\n  currentPage: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n  data: T;\n  pagination: Pagination;\n\n  constructor(data: T, pagination: Pagination) {\n    this.data = data;\n    this.pagination = pagination;\n  }\n}\n\nexport class PagingParams {\n  pageNumber;\n  pageSize;\n\n  constructor(pageNumber = 1, pageSize = 2) {\n    this.pageNumber = pageNumber;\n    this.pageSize = pageSize;\n  }\n}\n","import axios, { AxiosError, AxiosResponse } from 'axios';\nimport { toast } from 'react-toastify';\nimport { Activity, ActivityFormValues } from '../models/activity';\nimport { history } from '../../index';\nimport { store } from '../stores/store';\nimport { User, UserFormValues } from '../models/user';\nimport { Photo, Profile, UserActivity } from '../models/profile';\nimport { PaginatedResult } from '../models/pagination';\n\n\nconst sleep = (delay: number) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay)\n  })\n}\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.request.use(config => {\n  const token = store.commonStore.token;\n\n  if (token) config.headers.Authorization = `Bearer ${token}`\n  return config;\n})\n\n// For testing slow response loading indicator\naxios.interceptors.response.use(async response => {\n  if (process.env.NODE_ENV === 'development') await sleep(1000);\n  const pagination = response.headers['pagination'];\n\n  if (pagination) {\n    response.data = new PaginatedResult(response.data, JSON.parse(pagination));\n    return response as AxiosResponse<PaginatedResult<any>>\n  }\n\n  return response;\n}, (error: AxiosError) => {\n  const { data, status, config, headers } = error.response!;\n  switch (status) {\n    case 400:\n      if (typeof data === 'string') {\n        toast.error(data);\n      }\n      if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\n        history.push('not-found');\n      }\n      if (data.errors) {\n        const modalStateErrors = [];\n        for (const key in data.errors) {\n          if (data.errors[key]) {\n            modalStateErrors.push(data.errors[key])\n          }\n        }\n        throw modalStateErrors.flat();\n      }\n      break;\n    case 401:\n      if (status === 401 && headers['www-authenticate'].startsWith('Bearer error=\"invalid_token\"')) {\n        store.userStore.logout();\n        toast.error('Session expired - please login again');\n      }\n      break;\n    case 404:\n      history.push('/not-found');\n      break;\n    case 500:\n      store.commonStore.setServerError(data);\n      history.push('/server-error');\n      break;\n  }\n  return Promise.reject(error);\n})\n\n\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\n\n\nconst request = {\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\n  post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\n}\n\nconst Activities = {\n  list: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>('/activities', { params })\n    .then(responseBody),\n  details: (id: string) => request.get<Activity>(`/activities/${id}`),\n  create: (activity: ActivityFormValues) => request.post<void>('/activities', activity),\n  update: (activity: ActivityFormValues) => request.put<void>(`/activities/${activity.id}`, activity),\n  delete: (id: string) => request.del<void>(`/activities/${id}`),\n  attend: (id: string) => request.post<void>(`/activities/${id}/attend`, {})\n}\n\nconst Account = {\n  current: () => request.get<User>('/account'),\n  login: (user: UserFormValues) => request.post<User>('/account/login', user),\n  register: (user: UserFormValues) => request.post<User>('/account/register', user),\n  fbLogin: (accessToken: string) => request.post<User>(`/account/fbLogin?accessToken=${accessToken}`, {}),\n  refreshToken: () => request.post<User>('/account/refreshToken', {})\n}\n\nconst Profiles = {\n  get: (username: string) => request.get<Profile>(`/profiles/${username}`),\n  uploadPhoto: (file: Blob) => {\n    let formData = new FormData();\n    formData.append('File', file);\n    return axios.post<Photo>('photos', formData, {\n      headers: { 'Content-type': 'multipart/form-data' }\n    })\n  },\n  setMainPhoto: (id: string) => request.post(`/photos/${id}/setMain`, {}),\n  deletePhoto: (id: string) => request.del(`/photos/${id}`),\n  updateProfile: (profile: Partial<Profile>) => request.put(`/profiles`,\n    profile),\n  updateFollowing: (username: string) => request.post(`/follow/${username}`, {}),\n  listFollowings: (username: string, predicate: string) => request.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\n  listActivities: (username: string, predicate: string) => request.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`)\n}\n\nconst agent = {\n  Activities,\n  Account,\n  Profiles\n}\n\nexport default agent;\n","import { Profile } from \"./profile\";\n\nexport interface Activity {\n  id: string;\n  title: string;\n  date: Date | null;\n  description: string;\n  category: string;\n  city: string;\n  venue: string;\n  hostUsername: string;\n  isCancelled: boolean;\n  isGoing: boolean;\n  isHost: boolean;\n  host?: Profile;\n  attendees: Profile[];\n}\n\nexport class Activity implements Activity {\n  constructor(init?: ActivityFormValues) {\n    Object.assign(this, init);\n  }\n}\n\nexport class ActivityFormValues {\n  id?: string = undefined;\n  title: string = '';\n  category: string = '';\n  description: string = '';\n  date: Date | null = null;\n  city: string = '';\n  venue: string = '';\n\n  constructor(activity?: ActivityFormValues) {\n    if (activity) {\n      this.id = activity.id;\n      this.title = activity.title;\n      this.category = activity.category;\n      this.description = activity.description;\n      this.date = activity.date;\n      this.venue = activity.venue;\n      this.city = activity.city;\n    }\n  }\n}\n\n","import { User } from \"./user\";\n\nexport interface Profile {\n  username: string;\n  displayName: string;\n  image?: string;\n  bio?: string;\n  followersCount: number;\n  followingCount: number;\n  following: boolean;\n  photos?: Photo[];\n}\n\nexport class Profile implements Profile {\n  constructor(user: User) {\n    this.username = user.username;\n    this.displayName = user.displayName;\n    this.image = user.image;\n  }\n}\n\nexport interface Photo {\n  id: string,\n  url: string,\n  isMain: boolean;\n}\n\nexport interface UserActivity {\n  id: string;\n  title: string;\n  category: string;\n  date: Date;\n}\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Activity, ActivityFormValues } from \"../models/activity\";\nimport { format } from 'date-fns';\nimport { store } from \"./store\";\nimport { Profile } from \"../models/profile\";\nimport { Pagination, PagingParams } from \"../models/pagination\";\n\nexport default class ActivityStore {\n  activityRegistry = new Map<string, Activity>();\n  selectedActivity: Activity | undefined = undefined;\n  editMode = false;\n  loading = false;\n  loadingInitial = false;\n  pagination: Pagination | null = null;\n  pagingParams = new PagingParams();\n  predicate = new Map().set('all', true);\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.predicate.keys(),\n      () => {\n        this.pagingParams = new PagingParams();\n        this.activityRegistry.clear();\n        this.loadActivities();\n      }\n    )\n  }\n\n  setPagingParams = (pagingParams: PagingParams) => {\n    this.pagingParams = pagingParams;\n  }\n\n  setPredicate = (predicate: string, value: string | Date) => {\n    const resetPredicate = () => {\n      this.predicate.forEach((value, key) => {\n        if (key !== 'startDate') this.predicate.delete(key);\n      })\n    }\n    switch (predicate) {\n      case 'all':\n        resetPredicate();\n        this.predicate.set('all', true);\n        break;\n      case 'isGoing':\n        resetPredicate();\n        this.predicate.set('isGoing', true);\n        break;\n      case 'isHost':\n        resetPredicate();\n        this.predicate.set('isHost', true);\n        break;\n      case 'startDate':\n        this.predicate.delete('startDate');\n        this.predicate.set('startDate', value);\n    }\n  }\n\n  get axiosParams() {\n    const params = new URLSearchParams();\n    params.append('pageNumber', this.pagingParams.pageNumber.toString());\n    params.append('pageSize', this.pagingParams.pageSize.toString());\n    this.predicate.forEach((value, key) => {\n      if (key === 'startDate') {\n        params.append(key, (value as Date).toISOString());\n      } else {\n        params.append(key, value);\n      }\n    })\n    return params;\n  }\n\n  get activitiesByDate() {\n    return Array.from(this.activityRegistry.values()).sort((a, b) =>\n      a.date!.getTime() - b.date!.getTime());\n  }\n\n  get groupedActivities() {\n    return Object.entries(\n      this.activitiesByDate.reduce((activities, activity) => {\n        const date = format(activity.date!, 'dd MMM yyyy');\n        activities[date] = activities[date] ? [...activities[date], activity] : [activity];\n        return activities;\n      }, {} as { [key: string]: Activity[] })\n    )\n  }\n\n  loadActivities = async () => {\n    this.loadingInitial = true;\n    try {\n      const result = await agent.Activities.list(this.axiosParams);\n      result.data.forEach((activity) => {\n        this.setActivity(activity);\n      });\n      this.setPagination(result.pagination);\n      this.setLoadingInitial(false);\n    } catch (error) {\n      console.log(error);\n      this.setLoadingInitial(false);\n    }\n  }\n\n  setPagination = (pagination: Pagination) => {\n    this.pagination = pagination;\n  }\n\n  loadActivity = async (id: string) => {\n    let activity = this.getActivity(id);\n    if (activity) {\n      this.selectedActivity = activity;\n      return activity;\n    } else {\n      this.loadingInitial = true;\n      try {\n        activity = await agent.Activities.details(id);\n        this.setActivity(activity);\n        this.selectedActivity = activity;\n        runInAction(() => {\n          this.setLoadingInitial(false);\n        })\n        return activity;\n      } catch (error) {\n        console.log(error);\n        this.setLoadingInitial(false);\n      }\n    }\n  }\n\n  private setActivity = (activity: Activity) => {\n    const user = store.userStore.user;\n    if (user) {\n      activity.isGoing = activity.attendees!.some(\n        a => a.username === user.username\n      )\n      activity.isHost = activity.hostUsername === user.username;\n      activity.host = activity.attendees?.find(x => x.username === activity.hostUsername)\n    }\n    activity.date = new Date(activity.date!);\n    this.activityRegistry.set(activity.id, activity);\n  }\n\n  private getActivity = (id: string) => {\n    return this.activityRegistry.get(id);\n  }\n\n  setLoadingInitial = (state: boolean) => {\n    this.loadingInitial = state;\n  }\n\n  createActivity = async (activity: ActivityFormValues) => {\n    const user = store.userStore.user;\n    const attendee = new Profile(user!);\n    try {\n      await agent.Activities.create(activity);\n      const newActivity = new Activity(activity);\n      newActivity.hostUsername = user!.username;\n      newActivity.attendees = [attendee];\n      this.setActivity(newActivity);\n      runInAction(() => {\n        this.selectedActivity = newActivity;\n      })\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  updateActivity = async (activity: ActivityFormValues) => {\n    try {\n      await agent.Activities.update(activity);\n      runInAction(() => {\n        if (activity.id) {\n          let updatedActivity = { ...this.getActivity(activity.id), ...activity }\n          this.activityRegistry.set(activity.id, updatedActivity as Activity);\n          this.selectedActivity = updatedActivity as Activity;\n        }\n      })\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  deleteActivity = async (id: string) => {\n    this.loading = true;\n    try {\n      await agent.Activities.delete(id);\n      runInAction(() => {\n        this.activityRegistry.delete(id);\n        this.loading = false;\n      })\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loading = false;\n      })\n    }\n  }\n\n  updateAttendance = async () => {\n    const user = store.userStore.user;\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        if (this.selectedActivity?.isGoing) {\n          this.selectedActivity.attendees =\n            this.selectedActivity.attendees?.filter(a => a.username !== user?.username);\n          this.selectedActivity.isGoing = false;\n        } else {\n          const attendee = new Profile(user!);\n          this.selectedActivity?.attendees?.push(attendee);\n          this.selectedActivity!.isGoing = true;\n        }\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!)\n      })\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => this.loading = false);\n    }\n  }\n\n\n  cancelActivityToggle = async () => {\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\n      })\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => this.loading = false);\n    }\n  }\n\n  clearSelectedActivity = () => {\n    this.selectedActivity = undefined;\n  }\n\n  updateAttendeeFollowing = (username: string) => {\n    this.activityRegistry.forEach(activity => {\n      activity.attendees.forEach(attendee => {\n        if (attendee.username === username) {\n          attendee.following ? attendee.followersCount-- : attendee.followersCount++;\n          attendee.following = !attendee.following;\n        }\n      })\n    })\n  }\n\n}\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\nimport { store } from './store';\n\nexport default class ProfileStore {\n  currentUserProfile: Profile | null = null;\n  profile: Profile | null = null;\n  loadingProfile = false;\n  uploading = false;\n  loading = false;\n  followings: Profile[] = [];\n  loadingFollowings = false;\n  activeTab = 0;\n  userActivities: UserActivity[] = [];\n  loadingActivities = false;\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.activeTab,\n      activeTab => {\n        if (activeTab === 3 || activeTab === 4) {\n          const predicate = activeTab === 3 ? 'followers' : 'following';\n          this.loadFollowings(predicate);\n        } else {\n          this.followings = [];\n        }\n      }\n    )\n  }\n\n  setActiveTab = (activeTab: any) => {\n    this.activeTab = activeTab;\n  }\n\n  get isCurrentUser() {\n    if (store.userStore.user && this.profile) {\n      return store.userStore.user.username === this.profile.username;\n    }\n    return false;\n  }\n\n  loadProfile = async (username: string) => {\n    this.loadingProfile = true;\n    try {\n      const profile = await agent.Profiles.get(username);\n      runInAction(() => {\n        this.profile = profile;\n        this.loadingProfile = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => this.loadingProfile = false);\n    }\n  }\n\n  uploadPhoto = async (file: Blob) => {\n    this.uploading = true;\n    try {\n      const response = await agent.Profiles.uploadPhoto(file);\n      const photo = response.data;\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.photos?.push(photo);\n          if (photo.isMain && store.userStore.user) {\n            store.userStore.setImage(photo.url);\n            this.profile.image = photo.url;\n          }\n        }\n        this.uploading = false;\n      })\n    } catch (error) {\n      console.log(error)\n      runInAction(() => this.uploading = false);\n    }\n  }\n\n  setMainPhoto = async (photo: Photo) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.setMainPhoto(photo.id);\n      store.userStore.setImage(photo.url);\n      runInAction(() => {\n        if (this.profile && this.profile.photos) {\n          this.profile.photos.find(p => p.isMain)!.isMain = false;\n          this.profile.photos.find(p => p.id === photo.id)!.isMain = true;\n          this.profile.image = photo.url;\n          this.loading = false;\n        }\n      })\n    } catch (error) {\n      runInAction(() => this.loading = false);\n      console.log(error);\n    }\n  }\n\n  deletePhoto = async (photo: Photo) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.deletePhoto(photo.id);\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.photos = this.profile.photos?.filter(p => p.id !== photo.id);\n          this.loading = false;\n        }\n      })\n    } catch (error) {\n      runInAction(() => this.loading = false);\n      console.log(error);\n    }\n  }\n\n  updateProfile = async (profile: Partial<Profile>) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.updateProfile(profile);\n      runInAction(() => {\n        if (profile.displayName && profile.displayName !==\n          store.userStore.user?.displayName) {\n          store.userStore.setDisplayName(profile.displayName);\n        }\n        this.profile = { ...this.profile, ...profile as Profile };\n        this.loading = false;\n      })\n    } catch (error) {\n      console.log(error);\n      runInAction(() => this.loading = false);\n    }\n  }\n\n  updateFollowing = async (username: string, following: boolean) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.updateFollowing(username);\n      store.activityStore.updateAttendeeFollowing(username);\n      runInAction(() => {\n        if (this.profile && this.profile.username !== store.userStore.user?.username && this.profile.username === username) {\n          following ? this.profile.followersCount++ : this.profile.followersCount--;\n          this.profile.following = !this.profile.following;\n        }\n        if (this.profile && this.profile.username === store.userStore.user?.username) {\n          following ? this.profile.followingCount++ : this.profile.followingCount--;\n        }\n        this.followings.forEach(profile => {\n          if (profile.username === username) {\n            profile.following ? profile.followersCount-- : profile.followersCount++;\n            profile.following = !profile.following;\n          }\n        })\n        this.loading = false;\n      })\n    } catch (error) {\n      console.log(error);\n      runInAction(() => this.loading = false);\n    }\n  }\n\n  loadFollowings = async (predicate: string) => {\n    this.loadingFollowings = true;\n    try {\n      const followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\n      runInAction(() => {\n        this.followings = followings;\n        this.loadingFollowings = false;\n      })\n    } catch (error) {\n      console.log(error);\n      runInAction(() => this.loadingFollowings = false)\n    }\n  }\n\n  loadUserActivities = async (username: string, predicate?: string) => {\n    this.loadingActivities = true;\n    try {\n      const activities = await agent.Profiles.listActivities(username, predicate!);\n      runInAction(() => {\n        this.userActivities = activities;\n        this.loadingActivities = false;\n      })\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loadingActivities = false;\n      })\n    }\n  }\n}\n","import { makeAutoObservable, runInAction } from \"mobx\";\nimport { history } from \"../..\";\nimport agent from \"../api/agent\";\nimport { User, UserFormValues } from \"../models/user\";\nimport { store } from \"./store\";\n\nexport default class UserStore {\n  user: User | null = null;\n  fbAccessToken: string | null = null;\n  fbLoading = false;\n  refreshTokenTimeout: any;\n\n  constructor() {\n    makeAutoObservable(this)\n  }\n\n  get isLoggedIn() {\n    return !!this.user;\n  }\n\n  login = async (creds: UserFormValues) => {\n    try {\n      const user = await agent.Account.login(creds);\n      store.commonStore.setToken(user.token);\n      this.startRefreshTokenTimer(user);\n      runInAction(() => this.user = user);\n      history.push('/activities');\n      store.modalStore.closeModal();\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  logout = () => {\n    store.commonStore.setToken(null);\n    window.localStorage.removeItem('jwt');\n    this.user = null;\n    history.push('/')\n  }\n\n  getUser = async () => {\n    try {\n      const user = await agent.Account.current();\n      store.commonStore.setToken(user.token);\n      runInAction(() => this.user = user);\n      this.startRefreshTokenTimer(user);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  register = async (creds: UserFormValues) => {\n    try {\n      const user = await agent.Account.register(creds);\n      store.commonStore.setToken(user.token);\n      this.startRefreshTokenTimer(user);\n      runInAction(() => this.user = user);\n      history.push('/activities');\n      store.modalStore.closeModal();\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  setImage = (image: string) => {\n    if (this.user) {\n      this.user.image = image;\n    }\n  }\n\n  setDisplayName = (name: string) => {\n    if (this.user) this.user.displayName = name;\n  }\n\n  getFacebookLoginStatus = async () => {\n    window.FB.getLoginStatus(response => {\n      if (response.status === 'connected') {\n        this.fbAccessToken = response.authResponse.accessToken;\n      }\n    })\n  }\n\n  facebookLogin = () => {\n    this.fbLoading = true;\n    const apiLogin = (accessToken: string) => {\n      agent.Account.fbLogin(accessToken).then(user => {\n        store.commonStore.setToken(user.token);\n        this.startRefreshTokenTimer(user);\n        runInAction(() => {\n          this.user = user;\n          this.fbLoading = false;\n        })\n        history.push('/activities');\n      }).catch(error => {\n        console.log(error);\n        runInAction(() => this.fbLoading = false);\n      })\n    }\n    if (this.fbAccessToken) {\n      apiLogin(this.fbAccessToken);\n    } else {\n      window.FB.login(response => {\n        apiLogin(response.authResponse.accessToken);\n      }, { scope: 'public_profile,email' })\n    }\n    window.FB.login(response => {\n      agent.Account.fbLogin(response.authResponse.accessToken).then(user => console.log(user));\n    }, { scope: 'public_profile,email' })\n  }\n\n  refreshToken = async () => {\n    this.stopRefreshTokenTimer();\n    try {\n      const user = await agent.Account.refreshToken();\n      runInAction(() => this.user = user);\n      store.commonStore.setToken(user.token);\n      this.startRefreshTokenTimer(user);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  private startRefreshTokenTimer(user: User) {\n    const jwtToken = JSON.parse(atob(user.token.split('.')[1]));\n    const expires = new Date(jwtToken.exp * 1000);\n    const timeout = expires.getTime() - Date.now() - (60 * 1000);  // 60 seconds before exipres\n    this.refreshTokenTimeout = setTimeout(this.refreshToken, timeout);\n  }\n\n  private stopRefreshTokenTimer() {\n    clearTimeout(this.refreshTokenTimeout);\n  }\n}\n","import { createContext, useContext } from \"react\";\nimport ActivityStore from \"./activityStore\";\nimport CommentStore from \"./commentStore\";\nimport CommonStore from \"./commonStore\";\nimport ModalStore from \"./modalStore\";\nimport ProfileStore from \"./profileStore\";\nimport UserStore from \"./userStore\";\n\ninterface Store {\n  activityStore: ActivityStore;\n  commonStore: CommonStore;\n  userStore: UserStore;\n  modalStore: ModalStore;\n  profileStore: ProfileStore;\n  commentStore: CommentStore;\n}\n\nexport const store: Store = {\n  activityStore: new ActivityStore(),\n  commonStore: new CommonStore(),\n  userStore: new UserStore(),\n  modalStore: new ModalStore(),\n  profileStore: new ProfileStore(),\n  commentStore: new CommentStore()\n}\n\nexport const StoreContext = createContext(store);\n\nexport function useStore() {\n  return useContext(StoreContext);\n}\n","import { makeAutoObservable, reaction } from \"mobx\";\nimport { ServerError } from \"../models/serverError\";\n\nexport default class CommonStore {\n  error: ServerError | null = null;\n  token: string | null = window.localStorage.getItem('jwt');\n  appLoaded = false;\n\n  constructor() {\n    makeAutoObservable(this);\n\n    // This reaction is only called after token changes\n    reaction(\n      () => this.token,\n      token => {\n        if (token) {\n          window.localStorage.setItem('jwt', token)\n        } else {\n          window.localStorage.removeItem('jwt')\n        }\n      }\n    )\n  }\n\n  setServerError = (error: ServerError) => {\n    this.error = error;\n  }\n\n  setToken = (token: string | null) => {\n    if (token) window.localStorage.setItem('jwt', token);\n    this.token = token;\n  }\n\n  setAppLoaded = () => {\n    this.appLoaded = true;\n  }\n}\n","import { makeAutoObservable } from \"mobx\"\n\ninterface Modal {\n  open: boolean;\n  body: JSX.Element | null;\n}\n\nexport default class ModalStore {\n  modal: Modal = {\n    open: false,\n    body: null\n  }\n\n  constructor() {\n    makeAutoObservable(this)\n  }\n\n  openModal = (content: JSX.Element) => {\n    this.modal.open = true;\n    this.modal.body = content;\n  }\n\n  closeModal = () => {\n    this.modal.open = false;\n    this.modal.body = null;\n  }\n}\n","import { ChatComment } from \"../models/comment\";\nimport { HubConnection, HubConnectionBuilder, LogLevel } from '@microsoft/signalr';\nimport { makeAutoObservable, runInAction } from \"mobx\";\nimport { store } from \"./store\";\n\nexport default class CommentStore {\n  comments: ChatComment[] = [];\n  hubConnection: HubConnection | null = null;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  createHubConnection = (activityId: string) => {\n    if (store.activityStore.selectedActivity) {\n      this.hubConnection = new HubConnectionBuilder()\n        .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\n          accessTokenFactory: () => store.userStore.user?.token!\n        })\n        .withAutomaticReconnect()\n        .configureLogging(LogLevel.Information)\n        .build();\n\n      this.hubConnection.start().catch(error => console.log(\"Error establishing the connection: \", error))\n\n      this.hubConnection.on(\"LoadComments\", (comments: ChatComment[]) => {\n        runInAction(() => {\n          comments.forEach(comment => {\n            comment.createdAt = new Date(comment.createdAt + 'Z');\n          })\n          this.comments = comments\n        });\n      });\n\n      this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\n        runInAction(() => {\n          comment.createdAt = new Date(comment.createdAt)\n          this.comments.unshift(comment);\n        });\n\n      });\n    }\n  }\n\n  stopHubConnection = () => {\n    this.hubConnection?.stop().catch(error => console.log('Error stopping connection: ', error))\n  }\n\n  clearComments = () => {\n    this.comments = [];\n    this.stopHubConnection();\n  }\n\n  addComment = async (values: any) => {\n    values.activityId = store.activityStore.selectedActivity?.id;\n    try {\n      await this.hubConnection?.invoke('SendComment', values);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { Button, Container, Menu, Image, Dropdown } from 'semantic-ui-react';\nimport { useStore } from '../stores/store';\n\nexport default observer(function NavBar() {\n  const {\n    userStore: { user, logout },\n  } = useStore();\n\n  return (\n    <Menu inverted fixed=\"top\">\n      <Container>\n        <Menu.Item as={NavLink} to=\"/\" exact header>\n          <img\n            src=\"/assets/logo.png\"\n            alt=\"logo\"\n            style={{ marginRight: '10px' }}\n          />\n          Reactivities\n        </Menu.Item>\n        <Menu.Item as={NavLink} to=\"/activities\" name=\"Activities\" />\n        <Menu.Item as={NavLink} to=\"/errors\" name=\"Errors\" />\n        <Menu.Item>\n          <Button\n            as={NavLink}\n            to=\"/createActivity\"\n            positive\n            content=\"Create Activity\"\n          />\n        </Menu.Item>\n        <Menu.Item position=\"right\">\n          <Image\n            src={user?.image || '/assets/user.png'}\n            avatar\n            spaced=\"right\"\n          />\n          <Dropdown pointing=\"top left\" text={user?.displayName}>\n            <Dropdown.Menu>\n              <Dropdown.Item\n                as={Link}\n                to={`/profiles/${user?.username}`}\n                text=\"My Profile\"\n                icon=\"user\"\n              />\n              <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\n            </Dropdown.Menu>\n          </Dropdown>\n        </Menu.Item>\n      </Container>\n    </Menu>\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport Calendar from 'react-calendar';\nimport { Header, Menu } from 'semantic-ui-react';\nimport { useStore } from '../../../app/stores/store';\n\nexport default observer(function ActivityFilters() {\n  const {\n    activityStore: { predicate, setPredicate },\n  } = useStore();\n\n  return (\n    <>\n      <Menu vertical size=\"large\" style={{ width: '100%', marginTop: 26 }}>\n        <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\n        <Menu.Item\n          content=\"All Activities\"\n          active={predicate.has('all')}\n          onClick={() => setPredicate('all', 'true')}\n        />\n        <Menu.Item\n          content=\"I am going\"\n          active={predicate.has('isGoing')}\n          onClick={() => setPredicate('isGoing', 'true')}\n        />\n        <Menu.Item\n          content=\"I am hosting\"\n          active={predicate.has('isHost')}\n          onClick={() => setPredicate('isHost', 'true')}\n        />\n      </Menu>\n      <Header />\n      <Calendar\n        onChange={(date: Date) => setPredicate('startDate', date as Date)}\n        value={predicate.get('startDate') || new Date()}\n      />\n    </>\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport React, { SyntheticEvent } from 'react';\nimport { Button, Reveal } from 'semantic-ui-react';\nimport { Profile } from '../../app/models/profile';\nimport { useStore } from '../../app/stores/store';\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function FollowButton({ profile }: Props) {\n  const { profileStore, userStore } = useStore();\n  const { updateFollowing, loading } = profileStore;\n\n  if (userStore.user?.username === profile.username) return null;\n\n  function handleFollow(e: SyntheticEvent, username: string) {\n    e.preventDefault();\n    profile.following\n      ? updateFollowing(username, false)\n      : updateFollowing(username, true);\n  }\n\n  return (\n    <Reveal animated=\"move\">\n      <Reveal.Content visible style={{ width: '100%' }}>\n        <Button\n          fluid\n          color=\"teal\"\n          content={profile.following ? 'Following' : 'No following'}\n        />\n      </Reveal.Content>\n      <Reveal.Content hidden style={{ width: '100%' }}>\n        <Button\n          fluid\n          basic\n          color={profile.following ? 'red' : 'green'}\n          content={profile.following ? 'Unfollow' : 'Follow'}\n          loading={loading}\n          onClick={(e) => handleFollow(e, profile.username)}\n        />\n      </Reveal.Content>\n    </Reveal>\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Icon, Image } from 'semantic-ui-react';\nimport { Profile } from '../../app/models/profile';\nimport FollowButton from './FollowButton';\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileCard({ profile }: Props) {\n  function truncate(str: string | undefined) {\n    if (str) {\n      return str.length > 40 ? str.substring(0, 37) + '...' : str;\n    }\n  }\n\n  return (\n    <Card as={Link} to={`/profiles/${profile.username}`}>\n      <Image src={profile.image || '/assets/user.png'} />\n      <Card.Content>\n        <Card.Header>{profile.displayName}</Card.Header>\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <Icon name=\"user\" />\n        {profile.followersCount} followers\n      </Card.Content>\n      <FollowButton profile={profile} />\n    </Card>\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { List, Image, Popup } from 'semantic-ui-react';\nimport { Profile } from '../../../app/models/profile';\nimport ProfileCard from '../../profiles/ProfileCard';\n\ninterface Props {\n  attendees: Profile[];\n}\n\nexport default observer(function ActivityListItemAttendee({\n  attendees,\n}: Props) {\n  const styles = {\n    borderColor: 'orange',\n    borderWidth: 3,\n  };\n\n  return (\n    <List horizontal>\n      {attendees.map((attendee) => (\n        <Popup\n          hoverable\n          key={attendee.username}\n          trigger={\n            <List.Item\n              key={attendee.username}\n              as={Link}\n              to={`/profiles/${attendee.username}`}\n            >\n              <Image\n                size=\"mini\"\n                circular\n                src={attendee.image || '/assets/user.png'}\n                bordered\n                style={attendee.following ? styles : null}\n              />\n            </List.Item>\n          }\n        >\n          <Popup.Content>\n            <ProfileCard profile={attendee} />\n          </Popup.Content>\n        </Popup>\n      ))}\n    </List>\n  );\n});\n","import { Link } from 'react-router-dom';\nimport { Button, Icon, Item, Label, Segment } from 'semantic-ui-react';\nimport { Activity } from '../../../app/models/activity';\nimport { format } from 'date-fns';\nimport ActivityListItemAttendee from './ActivityListItemAttendee';\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default function ActivityListItem({ activity }: Props) {\n  return (\n    <Segment.Group>\n      {activity.isCancelled && (\n        <Label\n          attached=\"top\"\n          color=\"red\"\n          content=\"Cancelled\"\n          style={{ textAlign: 'center' }}\n        />\n      )}\n      <Segment>\n        <Item.Group>\n          <Item>\n            <Item.Image\n              style={{ marginBottom: 3 }}\n              size=\"tiny\"\n              circular\n              src={activity.host?.image || '/assets/user.png'}\n            />\n            <Item.Content>\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\n                {activity.title}\n              </Item.Header>\n              <Item.Description>\n                Hosted by{' '}\n                <Link to={`/profiles/${activity.hostUsername}`}>\n                  {activity.host?.displayName}\n                </Link>\n              </Item.Description>\n              {activity.isHost && (\n                <Item.Description>\n                  <Label basic color=\"orange\">\n                    You are hosting this activity\n                  </Label>\n                </Item.Description>\n              )}\n              {activity.isGoing && !activity.isHost && (\n                <Item.Description>\n                  <Label basic color=\"green\">\n                    You are going to this activity\n                  </Label>\n                </Item.Description>\n              )}\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      <Segment>\n        <span>\n          <Icon name=\"clock\" /> {format(activity.date!, 'dd MMM yyyy h:mm aa')}\n          <Icon name=\"marker\" /> {activity.venue}\n        </span>\n      </Segment>\n      <Segment secondary>\n        <ActivityListItemAttendee attendees={activity.attendees!} />\n      </Segment>\n      <Segment clearing>\n        <span>{activity.description}</span>\n        <Button\n          as={Link}\n          to={`/activities/${activity.id}`}\n          color=\"teal\"\n          floated=\"right\"\n          content=\"View\"\n        />\n      </Segment>\n    </Segment.Group>\n  );\n}\n","import { observer } from 'mobx-react-lite';\nimport { Fragment } from 'react';\nimport { Header } from 'semantic-ui-react';\nimport { useStore } from '../../../app/stores/store';\nimport ActivityListItem from './ActivityListItem';\n\nexport default observer(function ActivityList() {\n  const { activityStore } = useStore();\n  const { groupedActivities } = activityStore;\n\n  return (\n    <>\n      {groupedActivities.map(([group, activities]) => (\n        <Fragment key={group}>\n          <Header sub color=\"teal\">\n            {group}\n          </Header>\n          {activities.map((activity) => (\n            <ActivityListItem key={activity.id} activity={activity} />\n          ))}\n        </Fragment>\n      ))}\n    </>\n  );\n});\n","import React, { Fragment } from 'react';\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\n\nexport default function ActivityListItemPlaceholder() {\n  return (\n    <Fragment>\n      <Placeholder fluid style={{ marginTop: 25 }}>\n        <Segment.Group>\n          <Segment style={{ minHeight: 110 }}>\n            <Placeholder>\n              <Placeholder.Header image>\n                <Placeholder.Line />\n                <Placeholder.Line />\n              </Placeholder.Header>\n              <Placeholder.Paragraph>\n                <Placeholder.Line />\n              </Placeholder.Paragraph>\n            </Placeholder>\n          </Segment>\n          <Segment>\n            <Placeholder>\n              <Placeholder.Line />\n              <Placeholder.Line />\n            </Placeholder>\n          </Segment>\n          <Segment secondary style={{ minHeight: 70 }} />\n          <Segment clearing>\n            <Button disabled color=\"blue\" floated=\"right\" content=\"View\" />\n          </Segment>\n        </Segment.Group>\n      </Placeholder>\n    </Fragment>\n  );\n}\n","import { observer } from 'mobx-react-lite';\nimport React, { useEffect, useState } from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { Grid, Loader } from 'semantic-ui-react';\nimport { PagingParams } from '../../../app/models/pagination';\nimport { useStore } from '../../../app/stores/store';\nimport ActivityFilters from './ActivityFilters';\nimport ActivityList from './ActivityList';\nimport ActivityListItemPlaceholder from './ActivityListItemPlaceholder';\n\nexport default observer(function ActivityDashboard() {\n  const { activityStore } = useStore();\n  const { loadActivities, activityRegistry, setPagingParams, pagination } =\n    activityStore;\n  const [loadingNext, setLoadingNext] = useState(false);\n\n  function handleGetNext() {\n    setLoadingNext(true);\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\n    loadActivities().then(() => setLoadingNext(false));\n  }\n\n  useEffect(() => {\n    if (activityRegistry.size <= 1) loadActivities();\n  }, [activityRegistry.size, loadActivities]);\n\n  return (\n    <Grid>\n      <Grid.Column width=\"10\">\n        {activityStore.loadingInitial && !loadingNext ? (\n          <>\n            <ActivityListItemPlaceholder />\n            <ActivityListItemPlaceholder />\n          </>\n        ) : (\n          <InfiniteScroll\n            pageStart={0}\n            loadMore={handleGetNext}\n            hasMore={\n              !loadingNext &&\n              !!pagination &&\n              pagination.currentPage < pagination.totalPages\n            }\n            initialLoad={false}\n          >\n            <ActivityList />\n          </InfiniteScroll>\n        )}\n      </Grid.Column>\n      <Grid.Column width=\"6\">\n        <ActivityFilters />\n      </Grid.Column>\n      <Grid.Column width={10}>\n        <Loader active={loadingNext} />\n      </Grid.Column>\n    </Grid>\n  );\n});\n","import { useField } from 'formik';\nimport React from 'react';\nimport { Form, Label } from 'semantic-ui-react';\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  type?: string;\n  label?: string;\n}\n\nexport default function MyTextInput(props: Props) {\n  const [field, meta] = useField(props.name);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <input {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","import { ErrorMessage, Form, Formik } from 'formik';\nimport { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Button, Header, Label } from 'semantic-ui-react';\nimport MyTextInput from '../../app/common/form/MyTextInput';\nimport { useStore } from '../../app/stores/store';\n\nexport default observer(function LoginForm() {\n  const { userStore } = useStore();\n  return (\n    <Formik\n      initialValues={{ email: '', password: '', error: null }}\n      onSubmit={(values, { setErrors }) =>\n        userStore\n          .login(values)\n          .catch((error) => setErrors({ error: 'Invalid email or password' }))\n      }\n    >\n      {({ handleSubmit, isSubmitting, errors }) => (\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\n          <Header\n            as=\"h2\"\n            content=\"Login to Reactivities\"\n            color=\"teal\"\n            textAlign=\"center\"\n          />\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\n          <ErrorMessage\n            name=\"error\"\n            render={() => (\n              <Label\n                style={{ marginBottom: 10 }}\n                basic\n                color=\"red\"\n                content={errors.error}\n              />\n            )}\n          />\n          <Button\n            loading={isSubmitting}\n            positive\n            content=\"Login\"\n            type=\"submit\"\n            fluid\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n});\n","import React from 'react';\nimport { Message } from 'semantic-ui-react';\n\ninterface Props {\n  errors: any;\n}\n\nexport default function ValidationErrors({ errors }: Props) {\n  return (\n    <Message error>\n      {errors && (\n        <Message.List>\n          {errors.map((err: any, i: any) => (\n            <Message.Item key={i}>{err}</Message.Item>\n          ))}\n        </Message.List>\n      )}\n    </Message>\n  );\n}\n","import { ErrorMessage, Form, Formik } from 'formik';\nimport { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Button, Header } from 'semantic-ui-react';\nimport MyTextInput from '../../app/common/form/MyTextInput';\nimport { useStore } from '../../app/stores/store';\nimport * as Yup from 'yup';\nimport ValidationErrors from '../errors/ValidationErrors';\n\nexport default observer(function RegisterForm() {\n  const { userStore } = useStore();\n  return (\n    <Formik\n      initialValues={{\n        displayName: '',\n        username: '',\n        email: '',\n        password: '',\n        error: null,\n      }}\n      onSubmit={(values, { setErrors }) =>\n        userStore.register(values).catch((error) => setErrors({ error }))\n      }\n      validationSchema={Yup.object({\n        displayName: Yup.string().required(),\n        username: Yup.string().required(),\n        email: Yup.string().required().email(),\n        password: Yup.string().required(),\n      })}\n    >\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\n        <Form\n          className=\"ui form error\"\n          onSubmit={handleSubmit}\n          autoComplete=\"off\"\n        >\n          <Header\n            as=\"h2\"\n            content=\"Sign up to Reactivities\"\n            color=\"teal\"\n            textAlign=\"center\"\n          />\n          <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\n          <MyTextInput name=\"username\" placeholder=\"Username\" />\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\n          <ErrorMessage\n            name=\"error\"\n            render={() => <ValidationErrors errors={errors.error} />}\n          />\n          <Button\n            disabled={!isValid || !dirty || isSubmitting}\n            loading={isSubmitting}\n            positive\n            content=\"Register\"\n            type=\"submit\"\n            fluid\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Container,\n  Header,\n  Segment,\n  Image,\n  Button,\n  Divider,\n} from 'semantic-ui-react';\nimport { useStore } from '../../app/stores/store';\nimport LoginForm from '../users/LoginForm';\nimport RegisterForm from '../users/RegisterForm';\n\nexport default observer(function HomePage() {\n  const { userStore, modalStore } = useStore();\n  return (\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\n      <Container text>\n        <Header as=\"h1\" inverted>\n          <Image\n            size=\"massive\"\n            src=\"/assets/logo.png\"\n            alt=\"logo\"\n            style={{ marginBottom: 12 }}\n          />\n          Reactivities\n        </Header>\n        {userStore.isLoggedIn ? (\n          <>\n            <Header as=\"h2\" inverted content=\"Welcome to Reactivities\" />\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\n              Go to Activities\n            </Button>\n          </>\n        ) : (\n          <>\n            <Button\n              onClick={() => modalStore.openModal(<LoginForm />)}\n              to=\"/login\"\n              size=\"huge\"\n              inverted\n            >\n              Login!\n            </Button>\n            <Button\n              onClick={() => modalStore.openModal(<RegisterForm />)}\n              to=\"/login\"\n              size=\"huge\"\n              inverted\n            >\n              Register!\n            </Button>\n            <Divider horizontal inverted>\n              Or\n            </Divider>\n            <Button\n              loading={userStore.fbLoading}\n              size=\"huge\"\n              inverted\n              color=\"facebook\"\n              content=\"Login with Facebook\"\n              onClick={userStore.facebookLogin}\n            ></Button>\n          </>\n        )}\n      </Container>\n    </Segment>\n  );\n});\n","import React from 'react';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\ninterface Props {\n  inverted?: boolean;\n  content?: string;\n}\n\nexport default function LoadingComponent({\n  inverted = true,\n  content = 'Loading...',\n}: Props) {\n  return (\n    <Dimmer active={true} inverted={inverted}>\n      <Loader content={content} />\n    </Dimmer>\n  );\n}\n","import { useField } from 'formik';\nimport React from 'react';\nimport { Form, Label } from 'semantic-ui-react';\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  rows: number;\n  label?: string;\n}\n\nexport default function MyTextArea(props: Props) {\n  const [field, meta] = useField(props.name);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <textarea {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","import { useField } from 'formik';\nimport React from 'react';\nimport { Form, Label, Select } from 'semantic-ui-react';\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  options: any;\n  label?: string;\n}\n\nexport default function MySelectInput(props: Props) {\n  const [field, meta, helpers] = useField(props.name);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <Select\n        clearable\n        options={props.options}\n        value={field.value || null}\n        onChange={(event, data) => helpers.setValue(data.value)}\n        onBlur={() => helpers.setTouched(true)}\n        placeholder={props.placeholder}\n      />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","export const categoryOptions = [\n  { text: 'Drinks', value: 'drinks' },\n  { text: 'Culture', value: 'culture' },\n  { text: 'Film', value: 'film' },\n  { text: 'Food', value: 'food' },\n  { text: 'Music', value: 'music' },\n  { text: 'Travel', value: 'travel' },\n]\n","import { useField } from 'formik';\nimport React from 'react';\nimport { Form, Label } from 'semantic-ui-react';\nimport DatePicker, { ReactDatePickerProps } from 'react-datepicker';\n\nexport default function MyDateInput(props: Partial<ReactDatePickerProps<any>>) {\n  const [field, meta, helpers] = useField(props.name!);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <DatePicker\n        {...field}\n        {...props}\n        selected={(field.value && new Date(field.value)) || null}\n        onChange={(value) => helpers.setValue(value)}\n      />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","import { observer } from 'mobx-react-lite';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { Button, Header, Segment } from 'semantic-ui-react';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nimport { useStore } from '../../../app/stores/store';\nimport { v4 as uuid } from 'uuid';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport MyTextInput from '../../../app/common/form/MyTextInput';\nimport MyTextArea from '../../../app/common/form/MyTextArea';\nimport MySelectInput from '../../../app/common/form/MySelectInput';\nimport { categoryOptions } from '../../../app/common/options/categoryOptions';\nimport MyDateInput from '../../../app/common/form/MyDateInput';\nimport { ActivityFormValues } from '../../../app/models/activity';\n\nexport default observer(function ActivityForm() {\n  const history = useHistory();\n  const { activityStore } = useStore();\n  const { createActivity, updateActivity, loadActivity, loadingInitial } =\n    activityStore;\n  const { id } = useParams<{ id: string }>();\n\n  const [activity, setActivity] = useState<ActivityFormValues>(\n    new ActivityFormValues()\n  );\n\n  const validationSchema = Yup.object({\n    title: Yup.string().required('The activity title is required'),\n    description: Yup.string().required('The activity description is required'),\n    category: Yup.string().required(),\n    date: Yup.string().required('Date is required').nullable(),\n    venue: Yup.string().required(),\n    city: Yup.string().required(),\n  });\n\n  useEffect(() => {\n    if (id)\n      loadActivity(id).then((activity) =>\n        setActivity(new ActivityFormValues(activity))\n      );\n  }, [id, loadActivity]);\n\n  function handleFormSubmit(activity: ActivityFormValues) {\n    if (!activity.id) {\n      let newActivity = {\n        ...activity,\n        id: uuid(),\n      };\n      createActivity(newActivity).then(() =>\n        history.push(`/activities/${newActivity.id}`)\n      );\n    } else {\n      updateActivity(activity).then(() =>\n        history.push(`/activities/${activity.id}`)\n      );\n    }\n  }\n\n  if (loadingInitial) return <LoadingComponent content=\"Loading activity...\" />;\n\n  return (\n    <Segment clearing>\n      <Header content=\"Activity Details\" sub color=\"teal\" />\n      <Formik\n        validationSchema={validationSchema}\n        enableReinitialize\n        initialValues={activity}\n        onSubmit={(values) => handleFormSubmit(values)}\n      >\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\n            <MyTextInput name=\"title\" placeholder=\"Title\" />\n\n            <MyTextArea rows={3} placeholder=\"Description\" name=\"description\" />\n            <MySelectInput\n              options={categoryOptions}\n              placeholder=\"Category\"\n              name=\"category\"\n            />\n            <MyDateInput\n              placeholderText=\"Date\"\n              name=\"date\"\n              showTimeSelect\n              timeCaption=\"Time\"\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\n            />\n            <Header content=\"Activity Details\" sub color=\"teal\" />\n            <MyTextInput placeholder=\"City\" name=\"city\" />\n            <MyTextInput placeholder=\"Venue\" name=\"venue\" />\n            <Button\n              disabled={isSubmitting || !dirty || !isValid}\n              loading={isSubmitting}\n              floated=\"right\"\n              positive\n              type=\"submit\"\n              content=\"Submit\"\n            />\n            <Button\n              as={Link}\n              to=\"/activities\"\n              floated=\"right\"\n              type=\"button\"\n              content=\"Cancel\"\n            />\n          </Form>\n        )}\n      </Formik>\n    </Segment>\n  );\n});\n","import { Formik, Form, Field, FieldProps } from 'formik';\nimport { observer } from 'mobx-react-lite';\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Segment, Header, Comment, Loader } from 'semantic-ui-react';\nimport { useStore } from '../../../app/stores/store';\nimport * as Yup from 'yup';\nimport { formatDistanceToNow } from 'date-fns/esm';\n\ninterface Props {\n  activityId: string;\n}\n\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\n  const { commentStore } = useStore();\n\n  useEffect(() => {\n    if (activityId) {\n      commentStore.createHubConnection(activityId);\n    }\n\n    return () => {\n      commentStore.clearComments();\n    };\n  }, [commentStore, activityId]);\n\n  return (\n    <>\n      <Segment\n        textAlign=\"center\"\n        attached=\"top\"\n        inverted\n        color=\"teal\"\n        style={{ border: 'none' }}\n      >\n        <Header>Chat about this event</Header>\n      </Segment>\n      <Segment attached clearing>\n        <Formik\n          onSubmit={(values, { resetForm }) =>\n            commentStore.addComment(values).then(() => resetForm())\n          }\n          initialValues={{ body: '' }}\n          validationSchema={Yup.object({\n            body: Yup.string().required(),\n          })}\n        >\n          {({ isSubmitting, isValid, handleSubmit }) => (\n            <Form className=\"ui form\">\n              <Field name=\"body\">\n                {(props: FieldProps) => (\n                  <div style={{ position: 'relative' }}>\n                    <Loader active={isSubmitting} />\n                    <textarea\n                      placeholder=\"Enter your comment (Enter to submit, SHIFT + ENTER for new line)\"\n                      rows={2}\n                      {...props.field}\n                      onKeyPress={(e) => {\n                        if (e.key === 'Enter' && e.shiftKey) {\n                          return;\n                        }\n                        if (e.key === 'Enter' && !e.shiftKey) {\n                          e.preventDefault();\n                          isValid && handleSubmit();\n                        }\n                      }}\n                    />\n                  </div>\n                )}\n              </Field>\n            </Form>\n          )}\n        </Formik>\n\n        <Comment.Group>\n          {commentStore.comments.map((comment) => (\n            <Comment key={comment.id}>\n              <Comment.Avatar src={comment.image || '/assets/user.png'} />\n              <Comment.Content>\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\n                  {comment.displayName}\n                </Comment.Author>\n                <Comment.Metadata>\n                  <div>{formatDistanceToNow(comment.createdAt)} ago</div>\n                </Comment.Metadata>\n                <Comment.Text style={{ whiteSpace: 'pre-wrap' }}>\n                  {comment.body}\n                </Comment.Text>\n              </Comment.Content>\n            </Comment>\n          ))}\n        </Comment.Group>\n      </Segment>\n    </>\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Header, Item, Segment, Image, Label } from 'semantic-ui-react';\nimport { Activity } from '../../../app/models/activity';\nimport { format } from 'date-fns';\nimport { useStore } from '../../../app/stores/store';\n\nconst activityImageStyle = {\n  filter: 'brightness(30%)',\n};\n\nconst activityImageTextStyle = {\n  position: 'absolute',\n  bottom: '5%',\n  left: '5%',\n  width: '100%',\n  height: 'auto',\n  color: 'white',\n};\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\n  const {\n    activityStore: { updateAttendance, loading, cancelActivityToggle },\n  } = useStore();\n  return (\n    <Segment.Group>\n      <Segment basic attached=\"top\" style={{ padding: '0' }}>\n        {activity.isCancelled && (\n          <Label\n            style={{ position: 'absolute', zIndex: 1000, left: -14, top: 20 }}\n            ribbon\n            color=\"red\"\n            content=\"Cancelled\"\n          />\n        )}\n        <Image\n          src={`/assets/categoryImages/${activity.category}.jpg`}\n          fluid\n          style={activityImageStyle}\n        />\n        <Segment style={activityImageTextStyle} basic>\n          <Item.Group>\n            <Item>\n              <Item.Content>\n                <Header\n                  size=\"huge\"\n                  content={activity.title}\n                  style={{ color: 'white' }}\n                />\n                <p>{format(activity.date!, 'dd MMM yyyy')}</p>\n                <p>\n                  Hosted by{' '}\n                  <strong>\n                    <Link to={`/profiles/${activity.host?.username}`}>\n                      {activity.host?.displayName}\n                    </Link>\n                  </strong>\n                </p>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n      </Segment>\n      <Segment clearing attached=\"bottom\">\n        {activity.isHost ? (\n          <>\n            <Button\n              color={activity.isCancelled ? 'green' : 'red'}\n              floated=\"left\"\n              basic\n              content={\n                activity.isCancelled\n                  ? 'Re-activate Activity'\n                  : 'Cancel Activity'\n              }\n              onClick={cancelActivityToggle}\n              loading={loading}\n            />\n            <Button\n              as={Link}\n              disabled={activity.isCancelled}\n              to={`/manage/${activity.id}`}\n              color=\"orange\"\n              floated=\"right\"\n            >\n              Manage Event\n            </Button>\n          </>\n        ) : activity.isGoing ? (\n          <Button loading={loading} onClick={updateAttendance}>\n            Cancel attendance\n          </Button>\n        ) : (\n          <Button\n            disabled={activity.isCancelled}\n            loading={loading}\n            onClick={updateAttendance}\n            color=\"teal\"\n          >\n            Join Activity\n          </Button>\n        )}\n      </Segment>\n    </Segment.Group>\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Segment, Grid, Icon } from 'semantic-ui-react';\nimport { Activity } from '../../../app/models/activity';\nimport { format } from 'date-fns';\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\n  return (\n    <Segment.Group>\n      <Segment attached=\"top\">\n        <Grid>\n          <Grid.Column width={1}>\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <p>{activity.description}</p>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <span>{format(activity.date!, 'dd MMM yyyy h:mmm aa')}</span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={11}>\n            <span>\n              {activity.venue}, {activity.city}\n            </span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n    </Segment.Group>\n  );\n});\n","import React from 'react';\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport { Activity } from '../../../app/models/activity';\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedSidebar({\n  activity: { attendees, host },\n}: Props) {\n  if (!attendees) return null;\n\n  return (\n    <>\n      <Segment\n        textAlign=\"center\"\n        style={{ border: 'none' }}\n        attached=\"top\"\n        secondary\n        inverted\n        color=\"teal\"\n      >\n        {attendees.length} {attendees.length === 1 ? 'Person' : 'People'} going\n      </Segment>\n      <Segment attached>\n        <List relaxed divided>\n          {attendees.map((attendee) => (\n            <Item style={{ position: 'relative' }} key={attendee.username}>\n              {attendee.username === host?.username && (\n                <Label\n                  style={{ position: 'absolute' }}\n                  color=\"orange\"\n                  ribbon=\"right\"\n                >\n                  Host\n                </Label>\n              )}\n              <Image size=\"tiny\" src={attendee.image || '/assets/user.png'} />\n              <Item.Content verticalAlign=\"middle\">\n                <Item.Header as=\"h3\">\n                  <Link to={`/profiles/${attendee.username}`}>\n                    {attendee.displayName}\n                  </Link>\n                </Item.Header>\n                {attendee.following && (\n                  <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>\n                )}\n              </Item.Content>\n            </Item>\n          ))}\n        </List>\n      </Segment>\n    </>\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Grid } from 'semantic-ui-react';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nimport { useStore } from '../../../app/stores/store';\nimport ActivityDetailedChat from './ActivityDetailedChat';\nimport ActivityDetailedHeader from './ActivityDetailedHeader';\nimport ActivityDetailedInfo from './ActivityDetailedInfo';\nimport ActivityDetailedSidebar from './ActivityDetailedSidebar';\n\nexport default observer(function ActivityDetails() {\n  const { activityStore } = useStore();\n  const {\n    selectedActivity: activity,\n    loadActivity,\n    loadingInitial,\n    clearSelectedActivity,\n  } = activityStore;\n  const { id } = useParams<{ id: string }>();\n\n  useEffect(() => {\n    if (id) loadActivity(id);\n    return () => clearSelectedActivity();\n  }, [id, loadActivity, clearSelectedActivity]);\n\n  if (loadingInitial || !activity) return <LoadingComponent />; // a hack to get around typescript not knowing activity\n  // won't be undefined as we have a guard in the calling code.\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <ActivityDetailedHeader activity={activity} />\n        <ActivityDetailedInfo activity={activity} />\n        <ActivityDetailedChat activityId={activity.id} />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <ActivityDetailedSidebar activity={activity} />\n      </Grid.Column>\n    </Grid>\n  );\n});\n","import React, { useState } from 'react';\nimport { Button, Header, Segment } from 'semantic-ui-react';\nimport axios from 'axios';\nimport ValidationErrors from './ValidationErrors';\n\nexport default function TestErrors() {\n  const baseUrl = process.env.REACT_APP_API_URL;\n  const [errors, setErrors] = useState(null);\n\n  function handleNotFound() {\n    axios\n      .get(baseUrl + 'buggy/not-found')\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleBadRequest() {\n    axios\n      .get(baseUrl + 'buggy/bad-request')\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleServerError() {\n    axios\n      .get(baseUrl + 'buggy/server-error')\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleUnauthorised() {\n    axios\n      .get(baseUrl + 'buggy/unauthorised')\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleBadGuid() {\n    axios\n      .get(baseUrl + 'activities/notaguid')\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleValidationError() {\n    axios.post(baseUrl + 'activities', {}).catch((err) => setErrors(err));\n  }\n\n  return (\n    <>\n      <Header as=\"h1\" content=\"Test Error component\" />\n      <Segment>\n        <Button.Group widths=\"7\">\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\n          <Button\n            onClick={handleBadRequest}\n            content=\"Bad Request\"\n            basic\n            primary\n          />\n          <Button\n            onClick={handleValidationError}\n            content=\"Validation Error\"\n            basic\n            primary\n          />\n          <Button\n            onClick={handleServerError}\n            content=\"Server Error\"\n            basic\n            primary\n          />\n          <Button\n            onClick={handleUnauthorised}\n            content=\"Unauthorised\"\n            basic\n            primary\n          />\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\n        </Button.Group>\n      </Segment>\n      {errors && <ValidationErrors errors={errors} />}\n    </>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react';\n\nexport default function NotFound() {\n  return (\n    <Segment placeholder>\n      <Header icon>\n        <Icon name=\"search\" />\n        Oops - we've looked everywhere and cound not find this.\n      </Header>\n      <Segment.Inline>\n        <Button as={Link} to=\"/activities\" primary>\n          Return to activities page\n        </Button>\n      </Segment.Inline>\n    </Segment>\n  );\n}\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Container, Header, Segment } from 'semantic-ui-react';\nimport { useStore } from '../../app/stores/store';\n\nexport default observer(function ServerError() {\n  const { commonStore } = useStore();\n  return (\n    <Container>\n      <Header as=\"h1\" content=\"Server Error\" />\n      <Header sub as=\"h5\" color=\"red\" content={commonStore.error?.message} />\n      {commonStore.error?.details && (\n        <Segment>\n          <Header as=\"h4\" content=\"Stack trace\" color=\"teal\" />\n          <code style={{ marginTop: '10px' }}>{commonStore.error.details}</code>\n        </Segment>\n      )}\n    </Container>\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Modal } from 'semantic-ui-react';\nimport { useStore } from '../../stores/store';\n\nexport default observer(function ModalContainer() {\n  const { modalStore } = useStore();\n\n  return (\n    <Modal\n      open={modalStore.modal.open}\n      onClose={modalStore.closeModal}\n      size=\"mini\"\n    >\n      <Modal.Content>{modalStore.modal.body}</Modal.Content>\n    </Modal>\n  );\n});\n","import React from 'react';\nimport { Cropper } from 'react-cropper';\nimport 'cropperjs/dist/cropper.css';\n\ninterface Props {\n  imagePreview: string;\n  setCropper: (cropper: Cropper) => void;\n}\n\nexport default function PhotoWidgetCropper({\n  imagePreview,\n  setCropper,\n}: Props) {\n  return (\n    <Cropper\n      src={imagePreview}\n      style={{ height: 200, width: '100%' }}\n      initialAspectRatio={1}\n      aspectRatio={1}\n      preview=\".img-preview\"\n      guides={false}\n      viewMode={1}\n      autoCropArea={1}\n      background={false}\n      onInitialized={(cropper) => setCropper(cropper)}\n    />\n  );\n}\n","import React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Header, Icon } from 'semantic-ui-react';\n\ninterface Props {\n  setFiles: (files: any) => void;\n}\n\nexport default function PhotoWidgetDropzone({ setFiles }: Props) {\n  const dzStyles = {\n    border: 'dashed 3px #eee',\n    borderColor: '#eee',\n    borderRadius: '5px',\n    paddingTop: '30px',\n    textAlign: 'center' as 'center',\n    height: 200,\n  };\n\n  const dzActive = {\n    borderColor: 'green',\n  };\n\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      setFiles(\n        acceptedFiles.map((file: any) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          })\n        )\n      );\n    },\n    [setFiles]\n  );\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  return (\n    <div\n      {...getRootProps()}\n      style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}\n    >\n      <input {...getInputProps()} />\n      <Icon name=\"upload\" size=\"huge\" />\n      <Header content=\"Drop image here\" />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Button, Grid, Header } from 'semantic-ui-react';\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\nimport PhotoWidgetDropzone from './PhotoWidgetDropzone';\n\ninterface Props {\n  loading: boolean;\n  uploadPhoto: (file: Blob) => void;\n}\n\nexport default function PhotoUploadWidget({ loading, uploadPhoto }: Props) {\n  const [files, setFiles] = useState<any>([]);\n  const [cropper, setCropper] = useState<Cropper>();\n\n  function onCrop() {\n    if (cropper) {\n      cropper.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!));\n    }\n  }\n\n  useEffect(() => {\n    return () => {\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\n    };\n  }, [files]);\n\n  return (\n    <Grid>\n      <Grid.Column width={4}>\n        <Header color=\"teal\" content=\"Step 1 - Add Photo\" />\n        <PhotoWidgetDropzone setFiles={setFiles} />\n      </Grid.Column>\n      <Grid.Column width={1} />\n      <Grid.Column width={4}>\n        <Header color=\"teal\" content=\"Step 2 - Resize image\" />\n        {files && files.length > 0 && (\n          <PhotoWidgetCropper\n            setCropper={setCropper}\n            imagePreview={files[0].preview}\n          />\n        )}\n      </Grid.Column>\n      <Grid.Column width={1} />\n      <Grid.Column width={4}>\n        <Header color=\"teal\" content=\"Step 3 - Preview & Upload\" />\n        {files && files.length > 0 && (\n          <>\n            <div\n              className=\"img-preview\"\n              style={{ minHeight: 200, overflow: 'hidden' }}\n            />\n            <Button.Group widths={2}>\n              <Button\n                loading={loading}\n                onClick={onCrop}\n                positive\n                icon=\"check\"\n              />\n              <Button\n                disabled={loading}\n                onClick={() => setFiles([])}\n                positive\n                icon=\"close\"\n              />\n            </Button.Group>\n          </>\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n}\n","import { observer } from 'mobx-react-lite';\nimport React, { SyntheticEvent, useState } from 'react';\nimport { Button, Card, Grid, Header, Image, Tab } from 'semantic-ui-react';\nimport PhotoUploadWidget from '../../app/common/imageUpload/PhotoUploadWidget';\nimport { Photo, Profile } from '../../app/models/profile';\nimport { useStore } from '../../app/stores/store';\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfilePhotos({ profile }: Props) {\n  const {\n    profileStore: {\n      isCurrentUser,\n      uploadPhoto,\n      uploading,\n      loading,\n      setMainPhoto,\n      deletePhoto,\n    },\n  } = useStore();\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\n  const [target, setTarget] = useState('');\n\n  function handlePhotoUpload(file: Blob) {\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\n  }\n\n  function handleSetMainPhoto(\n    photo: Photo,\n    e: SyntheticEvent<HTMLButtonElement>\n  ) {\n    setTarget(e.currentTarget.name);\n    setMainPhoto(photo);\n  }\n\n  function handleDeletePhoto(\n    photo: Photo,\n    e: SyntheticEvent<HTMLButtonElement>\n  ) {\n    setTarget(e.currentTarget.name);\n    deletePhoto(photo);\n  }\n\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width={15}>\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\n          {isCurrentUser && (\n            <Button\n              floated=\"right\"\n              basic\n              content={addPhotoMode ? 'Cancel' : 'Add Photo'}\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width={16}>\n          {addPhotoMode ? (\n            <PhotoUploadWidget\n              uploadPhoto={handlePhotoUpload}\n              loading={uploading}\n            />\n          ) : (\n            <Card.Group itemsPerRow={5}>\n              {profile.photos?.map((photo) => (\n                <Card key={photo.id}>\n                  <Image src={photo.url} />\n                  {isCurrentUser && (\n                    <Button.Group fluid widths={2}>\n                      <Button\n                        basic\n                        color=\"green\"\n                        content=\"Main\"\n                        name={'main' + photo.id}\n                        disabled={photo.isMain}\n                        loading={target === 'main' + photo.id && loading}\n                        onClick={(e) => handleSetMainPhoto(photo, e)}\n                      />\n                      <Button\n                        basic\n                        color=\"red\"\n                        icon=\"trash\"\n                        name={photo.id}\n                        disabled={photo.isMain}\n                        loading={target === photo.id && loading}\n                        onClick={(e) => handleDeletePhoto(photo, e)}\n                      />\n                    </Button.Group>\n                  )}\n                </Card>\n              ))}\n            </Card.Group>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import { Form, Formik } from 'formik';\nimport { observer } from 'mobx-react-lite';\nimport { Button } from 'semantic-ui-react';\nimport MyTextArea from '../../app/common/form/MyTextArea';\nimport MyTextInput from '../../app/common/form/MyTextInput';\nimport { useStore } from '../../app/stores/store';\nimport * as Yup from 'yup';\ninterface Props {\n  setEditMode: (editMode: boolean) => void;\n}\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\n  const {\n    profileStore: { profile, updateProfile },\n  } = useStore();\n  return (\n    <Formik\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\n      onSubmit={(values) => {\n        updateProfile(values).then(() => {\n          setEditMode(false);\n        });\n      }}\n      validationSchema={Yup.object({\n        displayName: Yup.string().required(),\n      })}\n    >\n      {({ isSubmitting, isValid, dirty }) => (\n        <Form className=\"ui form\">\n          <MyTextInput placeholder=\"Display Name\" name=\"displayName\" />\n          <MyTextArea rows={3} placeholder=\"Add your bio\" name=\"bio\" />\n          <Button\n            positive\n            type=\"submit\"\n            loading={isSubmitting}\n            content=\"Update profile\"\n            floated=\"right\"\n            disabled={!isValid || !dirty}\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n});\n","import React, { useState } from 'react';\nimport { useStore } from '../../app/stores/store';\nimport { Button, Grid, Header, Tab } from 'semantic-ui-react';\nimport ProfileEditForm from './ProfileEditForm';\nimport { observer } from 'mobx-react-lite';\n\nexport default observer(function ProfileAbout() {\n  const { profileStore } = useStore();\n  const { isCurrentUser, profile } = profileStore;\n  const [editMode, setEditMode] = useState(false);\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width=\"16\">\n          <Header\n            floated=\"left\"\n            icon=\"user\"\n            content={`About ${profile?.displayName}`}\n          />\n          {isCurrentUser && (\n            <Button\n              floated=\"right\"\n              basic\n              content={editMode ? 'Cancel' : 'Edit Profile'}\n              onClick={() => setEditMode(!editMode)}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width=\"16\">\n          {editMode ? (\n            <ProfileEditForm setEditMode={setEditMode} />\n          ) : (\n            <span style={{ whiteSpace: 'pre-wrap' }}>{profile?.bio}</span>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Card, Grid, Header, Tab } from 'semantic-ui-react';\nimport { useStore } from '../../app/stores/store';\nimport ProfileCard from './ProfileCard';\n\nexport default observer(function ProfileFollowings() {\n  const { profileStore } = useStore();\n  const { profile, followings, loadingFollowings, activeTab } = profileStore;\n\n  return (\n    <Tab.Pane loading={loadingFollowings}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header\n            floated=\"left\"\n            icon=\"user\"\n            content={\n              activeTab === 3\n                ? `People following ${profile?.displayName}`\n                : `People ${profile?.displayName} is following`\n            }\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Card.Group itemsPerRow={4}>\n            {followings.map((profile) => (\n              <ProfileCard key={profile.username} profile={profile} />\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import React, { SyntheticEvent, useEffect } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Tab, Grid, Header, Card, Image, TabProps } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { UserActivity } from '../../app/models/profile';\nimport { format } from 'date-fns';\nimport { useStore } from '../../app/stores/store';\n\nconst panes = [\n  { menuItem: 'Future Events', pane: { key: 'future' } },\n  { menuItem: 'Past Events', pane: { key: 'past' } },\n  { menuItem: 'Hosting', pane: { key: 'hosting' } },\n];\n\nexport default observer(function ProfileActivities() {\n  const { profileStore } = useStore();\n  const { loadUserActivities, profile, loadingActivities, userActivities } =\n    profileStore;\n  useEffect(() => {\n    loadUserActivities(profile!.username);\n  }, [loadUserActivities, profile]);\n\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\n    loadUserActivities(\n      profile!.username,\n      panes[data.activeIndex as number].pane.key\n    );\n  };\n\n  return (\n    <Tab.Pane loading={loadingActivities}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header floated=\"left\" icon=\"calendar\" content={'Activities'} />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Tab\n            panes={panes}\n            menu={{ secondary: true, pointing: true }}\n            onTabChange={(e, data) => handleTabChange(e, data)}\n          />\n          <br />\n          <Card.Group itemsPerRow={4}>\n            {userActivities.map((activity: UserActivity) => (\n              <Card\n                as={Link}\n                to={`/activities/${activity.id}`}\n                key={activity.id}\n              >\n                <Image\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\n                  style={{ minHeight: 100, objectFit: 'cover' }}\n                />\n                <Card.Content>\n                  <Card.Header textAlign=\"center\">{activity.title}</Card.Header>\n                  <Card.Meta textAlign=\"center\">\n                    <div>{format(new Date(activity.date), 'do LLL')}</div>\n                    <div>{format(new Date(activity.date), 'h:mm a')}</div>\n                  </Card.Meta>\n                </Card.Content>\n              </Card>\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Tab } from 'semantic-ui-react';\nimport { Profile } from '../../app/models/profile';\nimport ProfilePhotos from './ProfilePhotos';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileFollowings from './ProfileFollowings';\nimport { useStore } from '../../app/stores/store';\nimport ProfileActivities from './ProfileActivities';\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileContent({ profile }: Props) {\n  const { profileStore } = useStore();\n  const panes = [\n    { menuItem: 'About', render: () => <ProfileAbout /> },\n    { menuItem: 'Photos', render: () => <ProfilePhotos profile={profile} /> },\n    { menuItem: 'Events', render: () => <ProfileActivities /> },\n    {\n      menuItem: 'Followers',\n      render: () => <ProfileFollowings />,\n    },\n    {\n      menuItem: 'Following',\n      render: () => <ProfileFollowings />,\n    },\n  ];\n\n  return (\n    <Tab\n      menu={{ fluid: true, vertical: true }}\n      menuPosition=\"right\"\n      panes={panes}\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\n    />\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport {\n  Divider,\n  Grid,\n  Header,\n  Item,\n  Segment,\n  Statistic,\n} from 'semantic-ui-react';\nimport { Profile } from '../../app/models/profile';\nimport FollowButton from './FollowButton';\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileHeader({ profile }: Props) {\n  return (\n    <Segment>\n      <Grid>\n        <Grid.Column width={12}>\n          <Item.Group>\n            <Item>\n              <Item.Image\n                avatar\n                size=\"small\"\n                src={profile.image || '/assets/user.png'}\n              />\n              <Item.Content verticalAlign=\"middle\">\n                <Header as=\"h1\" content={profile.displayName} />\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Statistic.Group widths={2}>\n            <Statistic label=\"Followers\" value={profile.followersCount} />\n            <Statistic label=\"Following\" value={profile.followingCount} />\n          </Statistic.Group>\n          <Divider />\n          <FollowButton profile={profile} />\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { Grid } from 'semantic-ui-react';\nimport LoadingComponent from '../../app/layout/LoadingComponent';\nimport { useStore } from '../../app/stores/store';\nimport ProfileContent from './ProfileContent';\nimport ProfileHeader from './ProfileHeader';\n\nexport default observer(function ProfilePage() {\n  const { username } = useParams<{ username: string }>();\n  const { profileStore } = useStore();\n  const { loadingProfile, loadProfile, profile, setActiveTab } = profileStore;\n\n  useEffect(() => {\n    loadProfile(username);\n    return () => {\n      setActiveTab(0);\n    };\n  }, [loadProfile, username, setActiveTab]);\n\n  if (loadingProfile) return <LoadingComponent content=\"Loading profile...\" />;\n\n  return (\n    <Grid>\n      <Grid.Column width={16}>\n        {profile && (\n          <>\n            <ProfileHeader profile={profile} />\n            <ProfileContent profile={profile} />\n          </>\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n});\n","import { Redirect, Route, RouteComponentProps, RouteProps } from 'react-router';\nimport { useStore } from '../stores/store';\n\ninterface Props extends RouteProps {\n  component:\n    | React.ComponentType<RouteComponentProps<any>>\n    | React.ComponentType<any>;\n}\n\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\n  const {\n    userStore: { isLoggedIn },\n  } = useStore();\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\n      }\n    />\n  );\n}\n","import React, { useEffect } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport NavBar from './NavBar';\nimport ActivityDashboard from '../../features/activities/dashoard/ActivityDashboard';\nimport { observer } from 'mobx-react-lite';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport HomePage from '../../features/home/HomePage';\nimport ActivityForm from '../../features/activities/form/ActivityForm';\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\nimport TestErrors from '../../features/errors/TestError';\nimport { ToastContainer } from 'react-toastify';\nimport NotFound from '../../features/errors/NotFound';\nimport ServerError from '../../features/errors/ServerError';\nimport { useStore } from '../stores/store';\nimport LoadingComponent from './LoadingComponent';\nimport ModalContainer from '../common/modals/ModalContainer';\nimport ProfilePage from '../../features/profiles/ProfilePage';\nimport PrivateRoute from './PrivateRoute';\n\nfunction App() {\n  const location = useLocation();\n  const { commonStore, userStore } = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      userStore.getFacebookLoginStatus().then(() => commonStore.setAppLoaded());\n    }\n  }, [commonStore, userStore]);\n\n  if (!commonStore.appLoaded)\n    return <LoadingComponent content=\"Loading app...\" />;\n\n  return (\n    <>\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\n      <ModalContainer />\n      <Route exact path=\"/\" component={HomePage} />\n      <Route\n        path={'/(.+)'}\n        render={() => (\n          <>\n            <NavBar />\n            <Container style={{ marginTop: '7em' }}>\n              <Switch>\n                <PrivateRoute\n                  exact\n                  path=\"/activities\"\n                  component={ActivityDashboard}\n                />\n                <PrivateRoute\n                  path=\"/activities/:id\"\n                  component={ActivityDetails}\n                />\n                <PrivateRoute\n                  key={location.key}\n                  path={['/createActivity', '/manage/:id']}\n                  component={ActivityForm}\n                />\n                <PrivateRoute\n                  path=\"/profiles/:username\"\n                  component={ProfilePage}\n                />\n                <PrivateRoute path=\"/errors\" component={TestErrors} />\n                <Route path=\"/server-error\" component={ServerError} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { store, StoreContext } from './app/stores/store';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport ScrollToTop from './app/layout/ScrollToTop';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}